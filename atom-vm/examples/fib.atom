# Fib(64)
.data
    mult: DW 64
    msg: DB "Computation complete: "

.main
    # start with 0 and 1, store them in memory
    PUSH_CONST  0
    STORE_CONST 0001
    PUSH_CONST  1
    STORE_CONST 0002

    # introduce a counter, init at 0
    PUSH_CONST  0
    STORE_CONST 0000

    # read from memory the previous 2 values
    LOAD_CONST  0001
    LOAD_CONST  0002
    DUP
    STORE_CONST 0001
    ADD
    STORE_CONST 0002

    # load the counter and increment it by 1
    LOAD_CONST  0000
    INC
    DUP
    PUSH      mult

    # counter eq to limit?
    EQ

    # jump if not equal to limit, to the store to memory label
    JNE       0010

    # print the end of the computation
    CALL      end

    # loop is over, read the final result from memory
    LOAD_CONST  0002
    PRINT_CONST
    HALT

    # fuction definition
.PROC end:
    PUSH      msg
    PRINT
    RET
